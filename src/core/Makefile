#############################################################################
# Makefile for building: ../../bin/core
# Generated by qmake (2.01a) (Qt 4.7.3) on: Fri Nov 18 18:45:54 2011
# Project:  core.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile core.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG_OUTPUT -DQT_NO_WARNING_OUTPUT -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -pg -lc -g -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -pg -lc -g -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I. -I../libs/xml -I../libs/log -I../libs/api -I/usr/include/luajit-2.0 -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -lc
LIBS          = $(SUBLIBS)  -L/usr/lib -lluajit-5.1 -lQtXml -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = channel.cpp \
		env.cpp \
		event.cpp \
		log.cpp \
		luaHandler.cpp \
		main.cpp \
		message.cpp \
		node.cpp \
		nodeEvent.cpp \
		nodeEventTimer.cpp \
		nodeEventMovement.cpp \
		nodeEventMeasure.cpp \
		nodeEventRadioRX.cpp \
		nodeEventRadioTX.cpp \
		nodeEventRadioRXProcess.cpp \
		nodeEventRadioRXBegin.cpp \
		nodeEventLocalTime.cpp \
		nodeEventOn.cpp \
		nodeType.cpp \
		simulator.cpp \
		../libs/log/logevent.cpp \
		../libs/xml/xml.cpp 
OBJECTS       = debug/channel.o \
		debug/env.o \
		debug/event.o \
		debug/log.o \
		debug/luaHandler.o \
		debug/main.o \
		debug/message.o \
		debug/node.o \
		debug/nodeEvent.o \
		debug/nodeEventTimer.o \
		debug/nodeEventMovement.o \
		debug/nodeEventMeasure.o \
		debug/nodeEventRadioRX.o \
		debug/nodeEventRadioTX.o \
		debug/nodeEventRadioRXProcess.o \
		debug/nodeEventRadioRXBegin.o \
		debug/nodeEventLocalTime.o \
		debug/nodeEventOn.o \
		debug/nodeType.o \
		debug/simulator.o \
		debug/logevent.o \
		debug/xml.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		core.pro
QMAKE_TARGET  = core
DESTDIR       = ../../bin/
TARGET        = ../../bin/core

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../../bin/ || $(MKDIR) ../../bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: core.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile core.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile core.pro

dist: 
	@$(CHK_DIR_EXISTS) debug/core1.0.0 || $(MKDIR) debug/core1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) debug/core1.0.0/ && $(COPY_FILE) --parents channel.h env.h event.h log.h luaHandler.h message.h node.h nodeEvent.h nodeEventTimer.h nodeEventMovement.h nodeEventMeasure.h nodeEventRadioRX.h nodeEventRadioTX.h nodeEventRadioRXProcess.h nodeEventRadioRXBegin.h nodeEventLocalTime.h nodeEventOn.h nodeType.h simulator.h ../libs/log/logevent.h ../libs/xml/dataParams.h ../libs/xml/xml.h ../libs/api/api.h debug/core1.0.0/ && $(COPY_FILE) --parents channel.cpp env.cpp event.cpp log.cpp luaHandler.cpp main.cpp message.cpp node.cpp nodeEvent.cpp nodeEventTimer.cpp nodeEventMovement.cpp nodeEventMeasure.cpp nodeEventRadioRX.cpp nodeEventRadioTX.cpp nodeEventRadioRXProcess.cpp nodeEventRadioRXBegin.cpp nodeEventLocalTime.cpp nodeEventOn.cpp nodeType.cpp simulator.cpp ../libs/log/logevent.cpp ../libs/xml/xml.cpp debug/core1.0.0/ && (cd `dirname debug/core1.0.0` && $(TAR) core1.0.0.tar core1.0.0 && $(COMPRESS) core1.0.0.tar) && $(MOVE) `dirname debug/core1.0.0`/core1.0.0.tar.gz . && $(DEL_FILE) -r debug/core1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

debug/channel.o: channel.cpp env.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		luaHandler.h \
		log.h \
		nodeEvent.h \
		../libs/log/logevent.h \
		channel.h \
		nodeEventRadioRX.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/channel.o channel.cpp

debug/env.o: env.cpp env.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		luaHandler.h \
		log.h \
		nodeEvent.h \
		../libs/log/logevent.h \
		channel.h \
		nodeEventMovement.h \
		nodeEventOn.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/env.o env.cpp

debug/event.o: event.cpp event.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/event.o event.cpp

debug/log.o: log.cpp simulator.h \
		log.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		../libs/log/logevent.h \
		env.h \
		luaHandler.h \
		channel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/log.o log.cpp

debug/luaHandler.o: luaHandler.cpp luaHandler.h \
		log.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		../libs/log/logevent.h \
		env.h \
		channel.h \
		nodeEventRadioRXProcess.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/luaHandler.o luaHandler.cpp

debug/main.o: main.cpp simulator.h \
		log.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		../libs/log/logevent.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/main.o main.cpp

debug/message.o: message.cpp message.h \
		env.h \
		event.h \
		node.h \
		nodeType.h \
		luaHandler.h \
		log.h \
		nodeEvent.h \
		../libs/log/logevent.h \
		channel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/message.o message.cpp

debug/node.o: node.cpp node.h \
		event.h \
		message.h \
		nodeType.h \
		env.h \
		luaHandler.h \
		log.h \
		nodeEvent.h \
		../libs/log/logevent.h \
		channel.h \
		nodeEventRadioTX.h \
		nodeEventTimer.h \
		nodeEventLocalTime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/node.o node.cpp

debug/nodeEvent.o: nodeEvent.cpp nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeEvent.o nodeEvent.cpp

debug/nodeEventTimer.o: nodeEventTimer.cpp nodeEventTimer.h \
		node.h \
		event.h \
		message.h \
		nodeType.h \
		nodeEvent.h \
		log.h \
		../libs/log/logevent.h \
		luaHandler.h \
		env.h \
		channel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeEventTimer.o nodeEventTimer.cpp

debug/nodeEventMovement.o: nodeEventMovement.cpp nodeEventMovement.h \
		node.h \
		event.h \
		message.h \
		nodeType.h \
		nodeEvent.h \
		log.h \
		../libs/log/logevent.h \
		luaHandler.h \
		env.h \
		channel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeEventMovement.o nodeEventMovement.cpp

debug/nodeEventMeasure.o: nodeEventMeasure.cpp nodeEventMeasure.h \
		node.h \
		event.h \
		message.h \
		nodeType.h \
		nodeEvent.h \
		log.h \
		../libs/log/logevent.h \
		luaHandler.h \
		env.h \
		channel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeEventMeasure.o nodeEventMeasure.cpp

debug/nodeEventRadioRX.o: nodeEventRadioRX.cpp nodeEventRadioTX.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		luaHandler.h \
		log.h \
		../libs/log/logevent.h \
		env.h \
		channel.h \
		nodeEventRadioRX.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeEventRadioRX.o nodeEventRadioRX.cpp

debug/nodeEventRadioTX.o: nodeEventRadioTX.cpp nodeEventRadioTX.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		luaHandler.h \
		log.h \
		../libs/log/logevent.h \
		env.h \
		channel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeEventRadioTX.o nodeEventRadioTX.cpp

debug/nodeEventRadioRXProcess.o: nodeEventRadioRXProcess.cpp nodeEventRadioRXProcess.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		luaHandler.h \
		log.h \
		../libs/log/logevent.h \
		env.h \
		channel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeEventRadioRXProcess.o nodeEventRadioRXProcess.cpp

debug/nodeEventRadioRXBegin.o: nodeEventRadioRXBegin.cpp nodeEventRadioRXBegin.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		luaHandler.h \
		log.h \
		../libs/log/logevent.h \
		env.h \
		channel.h \
		nodeEventRadioRX.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeEventRadioRXBegin.o nodeEventRadioRXBegin.cpp

debug/nodeEventLocalTime.o: nodeEventLocalTime.cpp nodeEventLocalTime.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		luaHandler.h \
		log.h \
		../libs/log/logevent.h \
		env.h \
		channel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeEventLocalTime.o nodeEventLocalTime.cpp

debug/nodeEventOn.o: nodeEventOn.cpp nodeEventOn.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		log.h \
		../libs/log/logevent.h \
		luaHandler.h \
		env.h \
		channel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeEventOn.o nodeEventOn.cpp

debug/nodeType.o: nodeType.cpp nodeType.h \
		luaHandler.h \
		log.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		../libs/log/logevent.h \
		env.h \
		channel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/nodeType.o nodeType.cpp

debug/simulator.o: simulator.cpp simulator.h \
		log.h \
		nodeEvent.h \
		event.h \
		node.h \
		message.h \
		nodeType.h \
		../libs/log/logevent.h \
		env.h \
		luaHandler.h \
		channel.h \
		nodeEventRadioRX.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/simulator.o simulator.cpp

debug/logevent.o: ../libs/log/logevent.cpp ../libs/log/logevent.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/logevent.o ../libs/log/logevent.cpp

debug/xml.o: ../libs/xml/xml.cpp ../libs/xml/xml.h \
		../libs/xml/dataParams.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/xml.o ../libs/xml/xml.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

